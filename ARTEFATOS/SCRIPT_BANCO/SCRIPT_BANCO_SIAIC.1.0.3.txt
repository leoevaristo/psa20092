
CREATE DATABASE SIAIC;

use SIAIC;


CREATE TABLE ESTADO (
    EST_SIGLA CHAR(2) NOT NULL,
    EST_NOME VARCHAR(50) NOT NULL,
    PRIMARY KEY(EST_SIGLA)
);

CREATE TABLE CIDADE (
    CID_CODIGO INT AUTO_INCREMENT NOT NULL,
    CID_NOME VARCHAR(50) NOT NULL,
    CID_ESTADO CHAR(2) NOT NULL,
    FOREIGN KEY(CID_ESTADO) REFERENCES ESTADO(EST_SIGLA),
    PRIMARY KEY(CID_CODIGO)
);

CREATE TABLE BAIRRO (
    BAR_CODIGO INT AUTO_INCREMENT NOT NULL,
    BAR_NOME VARCHAR(100) NOT NULL,
    BAR_CIDADE INT NOT NULL,
    FOREIGN KEY(BAR_CIDADE) REFERENCES CIDADE(CID_CODIGO),
    PRIMARY KEY(BAR_CODIGO)
);

CREATE TABLE ENDERECO (
    END_CODIGO INT AUTO_INCREMENT NOT NULL,
    END_LOGRADOURO VARCHAR(10) NOT NULL,
    END_NOME VARCHAR(200) NOT NULL,
    END_CEP VARCHAR(8) NOT NULL,
    END_BAIRRO INT NOT NULL,
    FOREIGN KEY(END_BAIRRO) REFERENCES BAIRRO(BAR_CODIGO),
    PRIMARY KEY(END_CODIGO)
);

CREATE TABLE PESSOA (
    PES_CODIGO INT AUTO_INCREMENT NOT NULL,
    PES_NOME VARCHAR(50) NOT NULL,
    PES_TELEFONE VARCHAR(15) NULL,
    PES_CELULAR VARCHAR(15) NULL,
    PES_EMAIL VARCHAR(40) NULL,
    PES_TIPO CHAR(1) NOT NULL, -- Refere-se se é Jurídica ou Física, conforme discutido em sala
    PES_SEXO CHAR(1) NULL,
    PES_ENDERECO INT NOT NULL,
    FOREIGN KEY(PES_ENDERECO) REFERENCES ENDERECO(END_CODIGO),
    PRIMARY KEY(PES_CODIGO)
);


CREATE TABLE PESSOA_USUARIOS (
    PEU_CODIGO INT NOT NULL,
    PEU_CRECI VARCHAR(20) NULL,
    PEU_LOGIN VARCHAR(8) NOT NULL,
    PEU_SENHA VARCHAR(8) NOT NULL,
    FOREIGN KEY(PEU_CODIGO) REFERENCES PESSOA(PES_CODIGO),
    PRIMARY KEY(PEU_CODIGO)
);

alter table PESSOA_USUARIOS add column perfil char(1); 


CREATE TABLE PESSOA_CLIENTE (
    PEC_CODIGO INT NOT NULL,
    PEC_CPF VARCHAR(15) NULL,
    PEC_RG VARCHAR(15) NULL,
    PEC_CNPJ VARCHAR(20) NULL,
    FOREIGN KEY(PEC_CODIGO) REFERENCES PESSOA(PES_CODIGO),
    PRIMARY KEY(PEC_CODIGO)
);


CREATE TABLE IMOVEL_FINALIDADE(
    IMF_CODIGO INT AUTO_INCREMENT NOT NULL,
    IMF_NOME VARCHAR(50),
    PRIMARY KEY(IMF_CODIGO)
);

CREATE TABLE IMOVEL_CARACTERISTICAS(
    IMC_CODIGO INT AUTO_INCREMENT NOT NULL,
    IMC_DORMITORIOS_QTDE INT NULL,
    IMC_SUITES_QTDE INT NULL,
    IMC_VAGAS_GARAGEM_QTDE INT NULL,
    IMC_PISCINA char(1) NULL,
    PRIMARY KEY(IMC_CODIGO)
);

CREATE TABLE IMOVEL(
    IMO_CODIGO INT AUTO_INCREMENT NOT NULL,
    IMO_CARACTERISTICA INT NOT NULL,
    IMO_FINALIDADE INT NOT NULL,
    IMO_DETALHE VARCHAR(200) NULL,
    IMO_FORMA_PAGAMENTO VARCHAR(200),
    IMO_TIPO INT NOT NULL,
    IMO_VALOR DOUBLE NOT NULL,
    IMO_VALOR_CONDOMINIO DOUBLE NULL,
    IMO_ENDERECO INT NOT NULL,    
    IMO_CLIENTE INT NULL, -- O imóvel pode ter proprietário ou não
    FOREIGN KEY(IMO_CARACTERISTICA) REFERENCES IMOVEL_CARACTERISTICAS(IMC_CODIGO),
    FOREIGN KEY(IMO_FINALIDADE) REFERENCES IMOVEL_FINALIDADE(IMF_CODIGO),
    FOREIGN KEY(IMO_CLIENTE) REFERENCES PESSOA_CLIENTE(PEC_CODIGO),
    FOREIGN KEY(IMO_ENDERECO) REFERENCES ENDERECO(END_CODIGO),
    PRIMARY KEY(IMO_CODIGO)
);




CREATE TABLE PERFIL(
    PRF_CODIGO INT AUTO_INCREMENT NOT NULL,
    PRF_PESSOA_CLIENTE INT NOT NULL,
    PRF_IMOVEL_CARACTERISTICA INT NOT NULL,
    PRF_USUARIO INT NOT NULL,
    FOREIGN KEY(PRF_PESSOA_CLIENTE) REFERENCES PESSOA_CLIENTE(PEC_CODIGO),
    FOREIGN KEY(PRF_IMOVEL_CARACTERISTICA) REFERENCES IMOVEL_CARACTERISTICAS(IMC_CODIGO),
    FOREIGN KEY(PRF_USUARIO) REFERENCES PESSOA_USUARIOS(PEU_CODIGO),
    PRIMARY KEY(PRF_CODIGO)
);



CREATE TABLE AGENDA(
    AGE_CODIGO INT AUTO_INCREMENT NOT NULL,
    AGE_PESSOA_CLIENTE INT NOT NULL,
    AGE_PESSOA_USUARIO INT NOT NULL,
    AGE_IMOVEL INT NOT NULL,
    AGE_DATA DATE NULL,
    AGE_HORA_INICIO TIME NULL,
    AGE_HORA_FIM TIME NULL,
    FOREIGN KEY(AGE_PESSOA_CLIENTE) REFERENCES PESSOA_CLIENTE(PEC_CODIGO),
    FOREIGN KEY(AGE_PESSOA_USUARIO) REFERENCES PESSOA_USUARIOS(PEU_CODIGO),
    FOREIGN KEY(AGE_IMOVEL) REFERENCES IMOVEL(IMO_CODIGO),
    PRIMARY KEY(AGE_CODIGO)
);

CREATE TABLE VALOR_MERCADO(
    VAM_BAIRRO INT NOT NULL,
    VAM_VALOR_VENAL DOUBLE NOT NULL,
    FOREIGN KEY(VAM_BAIRRO) REFERENCES BAIRRO(BAR_CODIGO),
    PRIMARY KEY(VAM_BAIRRO)
);